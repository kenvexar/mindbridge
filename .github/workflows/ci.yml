name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

concurrency:
  group: ci-${{ github.ref }}-${{ github.workflow }}
  cancel-in-progress: true

jobs:
  ci:
    runs-on: ubuntu-latest
    env:
      # テスト/型チェック/静的検査で必要な最低限の環境変数
      # pytest 収集時の import エラー（ No module named 'src'）を防ぐため
      # ワークスペース直下を明示的に PYTHONPATH に追加
      PYTHONPATH: "."
      # CI では Ruff のキャッシュを無効化（安定・高速化のため）
      RUFF_NO_CACHE: "true"
      DISCORD_BOT_TOKEN: "test_token"
      DISCORD_GUILD_ID: "123456789"
      GEMINI_API_KEY: "test_api_key"
      OBSIDIAN_VAULT_PATH: "/tmp/test_vault"
      CHANNEL_INBOX: "123456789"
      CHANNEL_VOICE: "123456789"
      CHANNEL_FILES: "123456789"
      CHANNEL_MONEY: "123456789"
      CHANNEL_FINANCE_REPORTS: "123456789"
      CHANNEL_TASKS: "123456789"
      CHANNEL_PRODUCTIVITY_REVIEWS: "123456789"
      CHANNEL_NOTIFICATIONS: "123456789"
      CHANNEL_COMMANDS: "123456789"
      CHANNEL_ACTIVITY_LOG: "123456789"
      CHANNEL_DAILY_TASKS: "123456789"
      ENVIRONMENT: "test"
      ENABLE_MOCK_MODE: "true"
      PYTHONUNBUFFERED: "1"
    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - name: Set up Python
        id: py
        uses: actions/setup-python@v6
        with:
          python-version: "3.13"

      - name: Cache uv and venv
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/uv
            .venv
          key: ${{ runner.os }}-uv-${{ hashFiles('uv.lock') }}-py${{ steps.py.outputs.python-version }}
          restore-keys: |
            ${{ runner.os }}-uv-

      - name: Install uv
        run: |
          curl -LsSf https://astral.sh/uv/install.sh | sh
          echo "$HOME/.local/bin" >> $GITHUB_PATH

      - name: Install dependencies
        run: uv sync --dev --frozen

      - name: Run pre-commit (pre-push stage)
        run: uv run pre-commit run --hook-stage pre-push --all-files

      - name: Create test vault directory
        run: mkdir -p /tmp/test_vault

      - name: Run tests (pytest + coverage)
        run: |
          uv run pytest -q --cov=src --cov-report=term-missing --cov-report=xml --cov-fail-under=22

      - name: Upload coverage to Codecov
        if: always()
        uses: codecov/codecov-action@v5
        with:
          files: ./coverage.xml
          fail_ci_if_error: false
