name: Security Check (Personal Use)

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

permissions:
  contents: read
  security-events: write

jobs:
  security-scan:
    name: Essential Security Scan
    runs-on: ubuntu-latest
    timeout-minutes: 10

    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Set up Python
        uses: actions/setup-python@v6
        with:
          python-version: '3.13'

      - name: Install uv
        uses: astral-sh/setup-uv@v6
        with:
          enable-cache: true

      - name: Install dependencies
        run: uv sync --dev --group security

      - name: Security - Bandit (Python Security Linter)
        run: |
          echo "🔍 Running Bandit security linter..."
          uv run bandit -r src/ -f txt

      - name: Security - Safety (Dependency Vulnerability Scanner)
        env:
          SAFETY_API_KEY: ${{ secrets.SAFETY_API_KEY }}
        run: |
          echo "🔍 Checking for known vulnerabilities in dependencies..."
          if [ -n "${SAFETY_API_KEY}" ]; then
            uv run safety scan --stage cicd --output screen --disable-optional-telemetry
          else
            echo '::warning::SAFETY_API_KEY が設定されていないため、deprecated な safety check にフォールバックします。'
            uv run safety check --full-report
          fi

      - name: Security - gitleaks (Secrets Detection)
        uses: gitleaks/gitleaks-action@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  dependency-review:
    name: Dependency Review
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'

    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Dependency Review
        uses: actions/dependency-review-action@v4
        with:
          fail-on-severity: high
          allow-licenses: MIT, Apache-2.0, BSD-2-Clause, BSD-3-Clause, ISC
