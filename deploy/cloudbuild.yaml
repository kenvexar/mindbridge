# Google Cloud Build 設定 (Artifact Registry / 無料枠最適化)
steps:
  # Artifact Registry API とリポジトリを準備
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    id: 'Prepare Artifact Registry'
    entrypoint: 'bash'
    args:
      - -c
      - |
        set -euo pipefail
        gcloud services enable artifactregistry.googleapis.com
        # 既存チェック → なければ作成
        if ! gcloud artifacts repositories describe mindbridge \
          --location=us-central1 >/dev/null 2>&1; then
          gcloud artifacts repositories create mindbridge \
            --repository-format=docker \
            --location=us-central1 \
            --description="MindBridge container images"
        fi
        gcloud auth configure-docker us-central1-docker.pkg.dev -q

  # Docker イメージをビルド（ Cloud Run 用 Dockerfile 使用）
  - name: 'gcr.io/cloud-builders/docker'
    args: [
      'build',
      '-f', 'Dockerfile.cloudrun',
      '-t', 'us-central1-docker.pkg.dev/$PROJECT_ID/mindbridge/mindbridge:$COMMIT_SHA',
      '-t', 'us-central1-docker.pkg.dev/$PROJECT_ID/mindbridge/mindbridge:latest',
      '.'
    ]

  # イメージを Artifact Registry にプッシュ
  - name: 'gcr.io/cloud-builders/docker'
    args: ['push', 'us-central1-docker.pkg.dev/$PROJECT_ID/mindbridge/mindbridge:$COMMIT_SHA']
  - name: 'gcr.io/cloud-builders/docker'
    args: ['push', 'us-central1-docker.pkg.dev/$PROJECT_ID/mindbridge/mindbridge:latest']

  # Cloud Run にデプロイ (無料枠設定)
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    entrypoint: 'gcloud'
    args: [
      'run', 'deploy', 'mindbridge',
      '--image', 'us-central1-docker.pkg.dev/$PROJECT_ID/mindbridge/mindbridge:$COMMIT_SHA',
      '--region', 'us-central1',  # 無料枠対象リージョン
      '--platform', 'managed',
      '--allow-unauthenticated',
      '--memory', '512Mi',  # 無料枠内のメモリ制限
      '--cpu', '1',  # 無料枠内の CPU
      '--concurrency', '10',  # 同時リクエスト数制限
      '--max-instances', '3',  # 最大インスタンス数制限 (費用抑制)
      '--min-instances', '0',  # スケールゼロで費用節約
      '--timeout', '300',  # 5 分タイムアウト
      '--set-env-vars', 'ENVIRONMENT=production,LOG_LEVEL=INFO,ENABLE_MOCK_MODE=false',
      '--port', '8080'
    ]

# ビルドタイムアウト: 無料枠内で完了
timeout: '600s'  # 10 分

# ビルドオプション: 無料枠最適化
options:
  machineType: 'E2_STANDARD_8'  # バランス重視（無料枠のビルド分で十分）
  diskSizeGb: '10'              # 最小ディスクサイズ
  logging: 'CLOUD_LOGGING_ONLY' # Cloud Logging のみに送信

# 環境変数 (Secret Manager から取得)
availableSecrets:
  secretManager:
    - versionName: 'projects/$PROJECT_ID/secrets/discord-bot-token/versions/latest'
      env: 'DISCORD_BOT_TOKEN'
    - versionName: 'projects/$PROJECT_ID/secrets/gemini-api-key/versions/latest'
      env: 'GEMINI_API_KEY'
    - versionName: 'projects/$PROJECT_ID/secrets/google-cloud-speech-api-key/versions/latest'
      env: 'GOOGLE_CLOUD_SPEECH_API_KEY'
    # GitHub 同期用シークレット（無料永続化用）
    - versionName: 'projects/$PROJECT_ID/secrets/github-token/versions/latest'
      env: 'GITHUB_TOKEN'
    - versionName: 'projects/$PROJECT_ID/secrets/obsidian-backup-repo/versions/latest'
      env: 'OBSIDIAN_BACKUP_REPO'
