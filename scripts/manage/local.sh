# shellcheck shell=bash

cmd_clean() {
  local WITH_UV_CACHE=false
  while (($#)); do
    case "$1" in
      --with-uv-cache)
        WITH_UV_CACHE=true
        ;;
      --help|-h)
        cat <<'HELP'
Usage: ./scripts/manage.sh clean [--with-uv-cache]
  --with-uv-cache  uv cache prune も実行
HELP
        return 0
        ;;
      *)
        warn "未対応のオプション: $1"
        ;;
    esac
    shift
  done

  log_step "Pythonキャッシュを削除"
  find . -type d \(-name '__pycache__' -o -name '.mypy_cache' -o -name '.pytest_cache'\) -prune -exec rm -rf {} + 2>/dev/null || true
  rm -rf .pytest_cache .mypy_cache .ruff_cache

  if [[ "$WITH_UV_CACHE" == true ]]; then
    if command -v uv >/dev/null 2>&1; then
      log_step "uv cache prune を実行"
      if ! uv cache prune; then
        warn "uv cache prune に失敗しました"
      fi
    else
      warn "uv コマンドが見つからないため uv cache prune をスキップ"
    fi
  fi

  log_success "ローカルキャッシュを掃除しました"
}

cmd_init() {
  printf "%b\n" "${CYAN}MindBridge ローカル初期設定${NC}"
  if [[ -f .env ]]; then
    confirm ".env が存在します。上書きしますか?" || { echo "キャンセル"; return 0; }
  fi
  read -r -s -p "Discord Bot Token: " DISCORD_BOT_TOKEN
  printf "\n"
  read -r -s -p "Gemini API Key: " GEMINI_API_KEY
  printf "\n"
  local DEFAULT_VAULT="$HOME/Obsidian/MindBridge"
  read -r -p "Obsidian Vault パス [${DEFAULT_VAULT}]: " OBSIDIAN_VAULT_PATH
  OBSIDIAN_VAULT_PATH=${OBSIDIAN_VAULT_PATH:-$DEFAULT_VAULT}
  read -r -p "Discord Guild ID (任意): " DISCORD_GUILD_ID
  read -r -p "Secret Manager backend [env/google]: " SECRET_MANAGER_STRATEGY
  SECRET_MANAGER_STRATEGY=${SECRET_MANAGER_STRATEGY:-env}
  SECRET_MANAGER_PROJECT_ID=""
  if [[ "${SECRET_MANAGER_STRATEGY}" == "google" ]]; then
    read -r -p "Google Secret Manager Project ID: " SECRET_MANAGER_PROJECT_ID
  fi
  local PREV_UMASK
  PREV_UMASK=$(umask)
  umask 077
  cat > .env <<EOF
# Generated by scripts/manage.sh init
DISCORD_BOT_TOKEN=${DISCORD_BOT_TOKEN}
GEMINI_API_KEY=${GEMINI_API_KEY}
OBSIDIAN_VAULT_PATH=${OBSIDIAN_VAULT_PATH}
DISCORD_GUILD_ID=${DISCORD_GUILD_ID}
ENVIRONMENT=personal
LOG_LEVEL=INFO
SECRET_MANAGER_STRATEGY=${SECRET_MANAGER_STRATEGY}
EOF
  umask "${PREV_UMASK}"
  chmod 600 .env
  if [[ -n "${SECRET_MANAGER_PROJECT_ID}" ]]; then
    cat >> .env <<EOF
SECRET_MANAGER_PROJECT_ID=${SECRET_MANAGER_PROJECT_ID}
EOF
  fi
  mkdir -p "${OBSIDIAN_VAULT_PATH}"
  log_success ".env を作成しました"
}

cmd_run() {
  require_cmd uv
  [[ -f .env ]] || die ".env がありません。'cp .env.example .env' または './scripts/manage.sh init' を実行してください。"
  if [[ -n "${MB_UV_MARK:-}" ]]; then
    : > "${MB_UV_MARK}"
  fi
  if [[ "${MB_DEBUG:-}" == 1 ]]; then
    echo "[DEBUG] exec: uv run python -m src.main" 1>&2
  fi
  exec uv run python -m src.main
}
